{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","latitude","Date","getMonth","console","log","_seasonConfig$season","react_default","a","createElement","className","concat","Spinner","message","defaultProps","ReactDOM","render","content","_useState","useState","_useState2","Object","slicedToArray","setLat","_useState3","_useState4","errMsg","setErrMsg","useEffect","window","navigator","geolocation","getCurrentPosition","position","coords","err","src_SeasonDisplay_0","src_Spinner","document","querySelector"],"mappings":"4NAGMA,SAAe,CACnBC,OAAQ,CACNC,KAAM,uBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,oBACNC,SAAU,eA2BCE,EAfO,SAAAC,GAEpB,IAViBC,EAAKC,EAUhBC,GAVWF,EAUQD,EAAMI,UAVTF,GAUmB,IAAIG,MAAOC,YATxC,GAAKJ,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAQ9BM,QAAQC,IAAId,EAAaS,IAJI,IAAAM,EAKFf,EAAaS,GAAhCP,EALqBa,EAKrBb,KAAMC,EALeY,EAKfZ,SACd,OACEa,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBX,IAChCO,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBjB,EAAvB,WACZa,EAAAC,EAAAC,cAAA,UAAKhB,GACLc,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBjB,EAAxB,aC9BZkB,EAAU,SAAAf,GACd,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBb,EAAMgB,WAKjDD,EAAQE,aAAe,CACrBD,QAAS,cAGID,QC8CfG,IAASC,OAAOT,EAAAC,EAAAC,cAtDJ,WAAM,IAUZQ,EAVYC,EACMC,mBAAS,MADfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTpB,EADSsB,EAAA,GACJG,EADIH,EAAA,GAAAI,EAEYL,mBAAS,IAFrBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAETE,EAFSD,EAAA,GAEDE,EAFCF,EAAA,GAmBhB,OAhBAG,oBAAU,WACRC,OAAOC,UAAUC,YAAYC,mBAC3B,SAAAC,GAAQ,OAAIV,EAAOU,EAASC,OAAOjC,WACnC,SAAAkC,GAAG,OAAIR,EAAUQ,EAAItB,YAEtB,IAIDI,EADES,EACQnB,EAAAC,EAAAC,cAAA,qBAAaiB,GACd5B,EACCS,EAAAC,EAAAC,cAAC2B,EAAD,CAAenC,SAAUH,IAEzBS,EAAAC,EAAAC,cAAC4B,EAAD,CAASxB,QAAQ,mCAGtBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcO,IAmCtB,MAASqB,SAASC,cAAc","file":"static/js/main.840d53b1.chunk.js","sourcesContent":["import \"./SeasonDisplay.css\";\r\nimport React from \"react\";\r\n\r\nconst seasonConfig = {\r\n  summer: {\r\n    text: \"Let's hit the beach!\",\r\n    iconName: \"sun\"\r\n  },\r\n  winter: {\r\n    text: \"Burr, its cold!!!\",\r\n    iconName: \"snowflake\"\r\n  }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? \"summer\" : \"winter\";\r\n  } else {\r\n    return lat > 0 ? \"winter\" : \"summer\";\r\n  }\r\n};\r\n\r\nconst SeasonDisplay = props => {\r\n  // console.log(props.latitude);\r\n  const season = getSeason(props.latitude, new Date().getMonth());\r\n  // console.log(season);\r\n  console.log(seasonConfig[season]);\r\n  const { text, iconName } = seasonConfig[season];\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left massive ${iconName} icon`} />\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right massive ${iconName} icon`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from \"react\";\r\n\r\nconst Spinner = props => {\r\n  return (\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui big text loader\">{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  message: \"Loading...\"\r\n};\r\n\r\nexport default Spinner;\r\n","import \"./index.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SeasonDisplay from \"./SeasonDisplay\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst App = () => {\r\n  const [lat, setLat] = useState(null);\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  useEffect(() => {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      position => setLat(position.coords.latitude),\r\n      err => setErrMsg(err.message)\r\n    );\r\n  }, []);\r\n\r\n  let content;\r\n  if (errMsg) {\r\n    content = <div>Error: {errMsg}</div>;\r\n  } else if (lat) {\r\n    content = <SeasonDisplay latitude={lat} />;\r\n  } else {\r\n    content = <Spinner message=\"please accept location request\" />;\r\n  }\r\n\r\n  return <div className=\"border red\">{content}</div>;\r\n};\r\n\r\n// class App extends React.Component {\r\n//   state = {\r\n//     lat: null,\r\n//     errMsg: \"\"\r\n//   };\r\n//   componentDidMount() {\r\n//     // is called when the component is created\r\n//     console.log(\"My Component was rendered to the screen\");\r\n//     window.navigator.geolocation.getCurrentPosition(\r\n//       position => this.setState({ lat: position.coords.latitude }),\r\n//       err => this.setState({ errMsg: err.message })\r\n//     );\r\n//   }\r\n\r\n//   renderContent() {\r\n//     if (this.state.errMsg && !this.state.lat) {\r\n//       return <div>Error: {this.state.errMsg}</div>;\r\n//     } else if (!this.state.errMsg && this.state.lat) {\r\n//       return <SeasonDisplay latitude={this.state.lat} />;\r\n//     } else {\r\n//       return (\r\n//         <div>\r\n//           <Spinner message=\"Please Accept Location Request\" />\r\n//         </div>\r\n//       );\r\n//     }\r\n//   }\r\n//   render() {\r\n//     return <div>{this.renderContent()}</div>;\r\n//   }\r\n// }\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}